REST (передача репрезентативного состояния) — это архитектурный стиль для создания веб-сервисов, основанный на простоте, масштабируемости и использовании стандартов HTTP.

Основные принципы REST:
  1. Клиент-сервер
    Разделение клиентского интерфейса и серверной логики. Клиент запрашивает данные, сервер их предоставляет.

  2. Отсутствие состояния (Stateless)
    Каждый запрос от клиента к серверу должен содержать всю информацию, необходимую для его обработки. Сервер не сохраняет состояние между запросами.

  3. Кэшируемость
    Ответы сервера могут быть помечены как кэшируемые, чтобы клиент или промежуточные системы могли повторно использовать данные.

  4.Единообразие интерфейса
    Использование стандартных методов HTTP (GET, POST, PUT, DELETE) для операций с ресурсами. Ресурсы идентифицируются по URI (например, /users/123).

  5. Слоистая система
    Архитектура может включать промежуточные уровни (например, прокси-серверы или балансировщики нагрузки), но клиент не должен их замечать.

  6. Код по запросу (опционально)
    Сервер может отправлять клиенту исполняемый код (например, JavaScript), но это редко используется.

Особенности:
  Ресурсы (например, пользователи, заказы) представляются в формате JSON, XML и т. д.

  Операции:
    GET — получение данных,
    POST — создание,
    PUT/PATCH — обновление,
    DELETE — удаление.
